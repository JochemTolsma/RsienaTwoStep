% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/f_alternatives_ministep.R
\name{ts_alternatives_ministep}
\alias{ts_alternatives_ministep}
\alias{ts_alternatives_simstep}
\alias{ts_alternatives_twostep}
\title{Possible networks after ministep, simstep or twostep}
\usage{
ts_alternatives_ministep(net, ego)

ts_alternatives_simstep(net, ego)

ts_alternatives_twostep(
  net,
  dist1 = NULL,
  dist2 = NULL,
  modet1 = "degree",
  modet2 = "degree"
)
}
\arguments{
\item{net}{matrix, the adjacency matrix representing the relations between
actors. Valid values are 0 and 1.}

\item{ego}{numeric, value indicating ego (row number of net)}

\item{dist1}{numeric, minimal path length between ego1 and ego2 at time1 in
order to be allowed to start a coordination. If \code{NULL} all dyads are
allowed to start a coordination (i.e. \strong{simultaneity}).}

\item{dist2}{numeric, minimal path length between ego1 and ego2 at time2 in
order for twostep to be counted as coordination. See \code{DETAILS}.}

\item{modet1}{string indicating the type of ties being evaluated at time1.
"\code{degree}" considers all ties as undirected. "\code{outdegree}" only allows
directed paths starting from ego1 and ending at ego2. "\code{indegree}" only
allows directed paths starting from ego2 and ending at ego1. See:
\code{DETAILS}.}

\item{modet2}{string, indicating the type of ties being evaluated at time2.
"\code{degree}" considers all ties as undirected. "\code{outdegree}" only allows
directed paths starting from ego1 and ending at ego2. "\code{indegree}" only
allows directed paths starting from ego2 and ending at ego1. See:
\code{DETAILS}.}
}
\value{
list, a list of the alternative adjacency matrices after all possible ministeps of ego (\code{ts_alternatives_ministep}) or after all possible twosteps of two egos (\code{ts_alternatives_twostep})
}
\description{
\code{\link[=ts_alternatives_ministep]{ts_alternatives_ministep()}} constructs the possible future
networks at time2 after a ministep of \code{ego} given the network \code{net} at time1.
\code{\link[=ts_alternatives_twostep]{ts_alternatives_twostep()}} constructs the possible future networks at time2
after a twostep of two internally sampled egos (via \code{\link[=ts_select]{ts_select()}}) given the
network \code{net} at time1.
\code{\link[=ts_alternatives_simstep]{ts_alternatives_simstep()}} constructs the possible future
networks at time2 after two simultaneous ministeps of the same \code{ego} given the network \code{net} at time1.
}
\details{
\code{\link[=ts_alternatives_ministep]{ts_alternatives_ministep()}} mimics the ministep assumption as
implemented in the SAOM of \code{\link[RSiena:siena07]{RSiena::siena07()}}
\insertCite{ripley2022manual}{RsienaTwoStep}.
\code{\link[=ts_alternatives_twostep]{ts_alternatives_twostep()}} allows
two actors to simultaneously make a ministep, that is a \strong{twostep}.
The function implements three types of coordination:
\enumerate{
\item \strong{simultaneity}: when two actors are picked at random to simultaneously make
a ministep;
\item \strong{\emph{weak} coordination}: two actors are picked at random to
simultaneously make a ministep but only specific possible future networks are
regarded as the result of coordination (as determined by \code{dist1}, \code{dist2}
\code{modet1} and \code{modet2}) and included in the choice set of the two actors;
\item \strong{\emph{strict} coordination}: only actors are sampled to make a twostep who are
connected at time1 (as determined by \code{dist1} and \code{modet1}).
}

\code{\link[=ts_alternatives_simstep]{ts_alternatives_simstep()}} allows one actor to make two subsequent ministeps and thus
opens the door for strategic actions. That is, the first ministep may not contribute to
increased satisfaction of the actor (the network after the first ministep is not evaluated
more favorably than the original network) but the subsequent ministep may make up for this.
}
\examples{
ts_alternatives_ministep(net=ts_net1, ego=3)
}
\references{
\insertRef{ripley2022manual}{RsienaTwoStep}
}
\seealso{
\code{\link[=ts_select]{ts_select()}}, \code{\link[=ts_sims]{ts_sims()}}
}
