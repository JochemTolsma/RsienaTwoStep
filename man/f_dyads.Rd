% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/census.R
\name{f_dyads}
\alias{f_dyads}
\alias{f_triads}
\title{Network census}
\usage{
f_dyads(sims, simtype = "notypespecified", forplot = TRUE)

f_triads(sims, simtype = "notypespecified", forplot = TRUE)
}
\arguments{
\item{sims}{list, the result of \verb{f_sims():} the adjacency matrix representing the relations between actors. Valid values are 0 and 1.}

\item{simtype}{string, name of the simulation type used (e.g. \emph{ministep}, \emph{twostep}).}

\item{forplot}{logical, if set to \code{FALSE} a dataframe is returned with in the column the network characteristic and each row represents a simulation outcome.
If set to \code{TRUE} this dataframe is manipulated a bit, so that each row represents one specific network characteristic for each simulation outcome, this is useful for plotting.}
}
\value{
\code{data.frame}
}
\description{
These functions calculate characteristics of the simulated networks. For now, only a dyad census and a triad census are implemented.
}
\details{
For examples on how to use these statistics see: vignette("Introduction_RsienaTwoStep").
}
\examples{
\dontrun{
results_ministep <- f_sims(net=net1, rate=5, statistics=list(f_degree, f_recip),
parameters=c(-3,1))
results_twostep <- f_sims(net=net1, rate=5, statistics=list(f_degree, f_recip),
parameters=c(-3,1), p2step=1)

df_ms <- f_dyads(sims=results_ministep, simtype="ministep")
df_ts <- f_dyads(sims=results_twostep, simtype="twostep")

df <- rbind(df_ms, df_ts)
p <- ggplot(df, aes(x=x, y=y, fill=type)) +
 geom_violin(position=position_dodge(1)) +
 stat_summary(fun = mean,
              geom = "errorbar",
              fun.max = function(x) mean(x) + sd(x),
              fun.min = function(x) mean(x) - sd(x),
              width=.1,
              color="red", position=position_dodge(1)) +
 stat_summary(fun = mean,
              geom = "point",
              color="red", position=position_dodge(1))

p
}
}
\concept{networkcensus}
